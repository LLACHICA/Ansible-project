---
- name: Get services based on hostname
  hosts: all
  gather_facts: false
  become: yes
  vars:
    service_mapping:
      proxy:
        - chrony
        - cron
      proxhost:
        - cronx
        - chrony
      pihole:
        - cron
        - chrony
      systool:
        - cron
        - chrony

  tasks:
    - name: Gather service facts
      service_facts:

    - name: Determine services to check based on hostname
      set_fact:
        services_to_check: "{{ service_mapping[host_group] | default([]) }}"
      vars:
        host_group: "{{ service_mapping.keys() | select('in', inventory_hostname) | list | first }}"

    - name: Check if services exist and get their status
      block:
        - name: Get service status
          debug:
            msg: "{{ item }} is {{ ansible_facts.services[item ~ '.service']['state'] }}"
          when: "ansible_facts.services[item ~ '.service'] is defined"
          with_items: "{{ services_to_check }}"
      rescue:
        - name: Failed to get service status
          fail:
            msg: "Service {{ item }} failed on {{ inventory_hostname }}."
          when: true
          with_items: "{{ services_to_check }}"
      when: services_to_check | length > 0

