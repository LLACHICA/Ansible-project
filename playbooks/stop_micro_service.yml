---
- name: Stop services based on hostname
  hosts: all
  gather_facts: false
  become: yes
  vars:
    service_mapping:
      proxy:
        - keepalived
        - haproxy
      proxhost:
        - cron
        - chrony
      pihole:
        - cron
        - chrony
      systools:
        - cron
        - chrony
  tasks:
    - name: Gather service facts
      service_facts:

    - name: Get just the 'proxy' key from service_mapping
      debug:
        msg: "{{ service_mapping.values() | flatten }}"

    - name: Stop services under proxy on inventory_hostname
      service:
        name: "{{ item }}"
        state: stopped
      loop: "{{ service_mapping['proxy'] }}"
      when: 
        - "'proxy' in inventory_hostname"
#        - "'{{ item }}' in ansible_facts.services and ansible_facts.services['{{ item }}'].state == 'running'"

    - name: Determine services to stop based on hostname
      set_fact:
        services_to_stop: "{{ service_mapping[host_group] | default([]) }}"
      vars:
        host_group: "{{ service_mapping.keys() | select('in', inventory_hostname) | list | first }}"

    - name: Stop services
      service:
        name: "{{ item }}"
        state: stopped
      with_items: "{{ services_to_stop }}"
      when: "'proxy' not in inventory_hostname"

